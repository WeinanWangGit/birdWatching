<!DOCTYPE html>
<html>
<head>
    <title>Create a new Sighting</title>
    <style>
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

        .form-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            border: 1px solid black;
            border-radius: 10px;
            box-shadow: 0px 0px 10px grey;
            width: 80%;
            max-width: 600px;
        }

        label {
            margin-bottom: 10px;
            font-size: 18px;
            font-weight: bold;
            width: 100%;
        }

        input[type="text"],
        input[type="date"],
        input[type="datetime-local"] {
            margin-bottom: 20px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid grey;
            font-size: 18px;
            width: 100%;
        }

        textarea {
            margin-bottom: 20px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid grey;
            font-size: 18px;
            resize: vertical;
            width: 100%;
            height: 100px;
        }

        button[type="submit"] {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            border: none;
            font-size: 18px;
            cursor: pointer;
            position: absolute;
            bottom: 20px;
            right: 20px;
            box-shadow: 0px 0px 10px grey;
        }

        button[type="submit"] i {
            margin-right: 10px;
        }
    </style>
</head>
<body>
<div class="container">
    <h1>Create a new Sighting</h1>
    <form id="sighting-form">
        <div class="form-container">
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" required>
            <label for="date">Date:</label>
            <input type="date" id="date" name="date" required>
            <label for="author">Author:</label>
            <input type="text" id="author" name="author" required>
            <label for="location">Location:</label>
            <input type="text" id="location" name="location" required>
            <hr>
            <label for="identification">Identification:</label>
            <input type="text" id="identification" name="identification" required>
            <label for="bird-name">Bird Name:</label>
            <input type="text" id="bird-name" name="bird-name" required>
            <label for="description">Description:</label>
            <textarea id="bird-description" name="bird-description" required></textarea>
            <label for="url">URL:</label>
            <input type="text" id="url" name="url">
            <label for="image">Image:</label>
            <input type="file" id="image" name="image">
            <button type="submit"><i class="fa fa-plus-circle"></i> Create</button>
        </div>
    </form>

    <script>
        const form = document.getElementById('sighting-form');

        form.addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent form from submitting normally

            const data = {
                description: document.getElementById('description').value,
                date: document.getElementById('date').value,
                author: document.getElementById('author').value,
                location: document.getElementById('location').value,
                identification: document.getElementById('identification').value,
                birdName: document.getElementById('bird-name').value,
                birdDescription: document.getElementById('bird-description').value,
                url: document.getElementById('url').value,
                image: document.getElementById('image').files[0]
            };

            const formData = new FormData();
            for (const key in data) {
                formData.append(key, data[key]);
            }

            const response = await fetch('/create', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                alert('Sighting created successfully!');
                form.reset();
            } else {
                alert('Error creating sighting');
            }
        });
    </script>
</div>
</body>
</html>