<!DOCTYPE html>
<html>
  <head>
    <title>Sighting Details</title>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script src="../public/javascripts/chat.js"></script>

    <!-- <script src="https://unpkg.com/fetch-sparql-endpoint"></script> -->
    <link rel="stylesheet" href=".././stylesheets/details.css" />
    <%- include('partials/header') %>
  </head>

  <body onload="init('<%=JSON.stringify(sighting)%>')">
    <div class="container">
      <div class="left_container">
        <div class="img_container">
          <% if (sighting.image) { %>
          <img
            src="<%= sighting.image %>"
            alt="<%= sighting.identification.birdName %> Image"
          />
          <% } else { %>
          <p>The image is not available.</p>
          <% } %>
        </div>

        <div class="chat_interface">
          <h2 for="name">Chat</h2>
          <div id="chat_history" class="history">
            <!-- <% if (sighting && sighting.messages && sighting.messages.length >
            0) { %> <% for (var i = 0; i < sighting.messages.length; i++) { %>
            <p><%= sighting.messages[i].text %></p>
            <% } %> <% } else { %>
            <p>No messages yet.</p>
            <% } %> -->
            <% if (sighting && sighting.messages && sighting.messages.length >
            0) { %> <% for (var i = 0; i < sighting.messages.length; i++) { %>
            <div class="message">
              <div class="message-text"><%= sighting.messages[i].text %></div>
              <div class="message-sentAt">
                <%= new Date(sighting.messages[i].sentAt).toLocaleString() %>
              </div>
            </div>
            <% } %> <% } else { %>
            <p>No messages yet.</p>
            <% } %>
          </div>
          <form id="chat_form" onsubmit="return false;">
            <p>
              <textarea id="chat_input" class="chat_input"></textarea>
              <button id="chat_send" class="send_btn" onclick="sendChatText()">
                Send
              </button>
            </p>
          </form>
        </div>
      </div>

      <div class="right_container">
        <div class="search-container">
          <form id="search-form">
            <label for="search">Enter the bird name to search:</label>
            <input
              type="text"
              id="search-text"
              name="search-text"
              placeholder="e.g. Mockingbird"
              required
            />
            <button type="submit" class="identification-btn">Search</button>
          </form>
          <div id="search-results"></div>
        </div>

        <div class="identification_container">
          <h2>Identification Form</h2>
          <button id="update-btn" class="identification-btn">Update</button>

          <label class="bird_label" for="bird_label">Bird Name:</label>
          <div id="birdName"><%= sighting.identification.birdName %></div>
          <label class="description_label" for="description_label"
            >Description:</label
          >
          <div id="description"><%= sighting.identification.description %></div>
          <label class="url_label" for="url">URL:</label>
          <div id="url"><%= sighting.identification.url %></div>
        </div>

        <!-- Modal for updating identification -->
        <div id="modal" class="modal">
          <div class="modal-content">
            <h2>Edit Identification</h2>
            <label for="modal-bird-name">Bird Name:</label>
            <input type="text" id="modal-bird-name" />
            <label for="modal-description">Description:</label>
            <textarea id="modal-description"></textarea>
            <label for="modal-url">URL:</label>
            <input type="text" id="modal-url" />
            <div class="modal-buttons">
              <button id="save-btn" class="identification-btn">Save</button>
              <button id="cancel-btn" class="identification-btn">Cancel</button>
            </div>
          </div>
        </div>

        <div class="metadata">
          <h2>Metadata</h2>
          <p><strong>Date:</strong> <%= sighting.date %></p>
          <p><strong>Author:</strong> <%= sighting.author %></p>
          <p id="location">
            <strong>Location:</strong> <%= sighting.location %>
          </p>
          <div id="map" style="height: 500px; width: 700px"></div>
          <p id="location" contenteditable="false" ><strong>Location:</strong> <%= sighting.location %></p>
          <div id="map" style="height: 500px;width: 700px"></div>
          <p><strong>Description:</strong> <%= sighting.description %></p>
        </div>
      </div>
    </div>

    <!--    map-->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3zXfnVpTkl7MMXYScQFqwUY3Pvm9fP5w&callback=initMap&language=en"
      async
      defer
    ></script>
    <script>
      function initMap() {
        var map = new google.maps.Map(document.getElementById("map"), {
          center: { lat: 53.381766908539895, lng: -1.4816093444824219 },
          zoom: 12,
        });

        map.addListener( function(e) {
          var location = e.latLng;
          var locationInfo = document.getElementById("location");
          locationInfo.innerText =
            "Location:" +
            "Latitude: " +
            location.lat() +
            ", Longitude: " +
            location.lng();
          // alert('The location you chose is: ' + location.lat() + ',' + location.lng());
        });
      }
    </script>

    <script>
      const searchForm = document.querySelector("#search-form");
      const searchResults = document.querySelector("#search-results");

      searchForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const searchText = document.querySelector("#search-text").value;
        const sanitisedSearch = searchText.replace(/[^a-zA-Z0-9]/g, "");

        // Query DBPedia to get bird information
        const query = `
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        SELECT ?bird ?label ?description
        WHERE {
          ?bird a <http://dbpedia.org/ontology/Bird>;
          rdfs:label ?label;
          dbo:abstract ?description.
          FILTER(LANG(?label) = 'en' && LANG(?description) = 'en' && regex(?label, '${sanitisedSearch}',"i"))
        }
        LIMIT 5
        `;

        const url = `https://dbpedia.org/sparql?query=${encodeURIComponent(
          query
        )}&format=json`;
        const response = await fetch(url);
        // const response = await fetch(`/search?text=${searchText}`);

        if (response.ok) {
          const data = await response.json();
          displayResults(data);
          console.log(data);
        } else {
          console.error("Failed to fetch search results:", response.status);
        }
      });

      function displayResults(data) {
        const resultsContainer = document.querySelector("#search-results");
        resultsContainer.innerHTML = "";

        const bindings = data.results.bindings;
        // Make the resultsContainer visible
        resultsContainer.style.display = "block";
        if (bindings.length === 0) {
          resultsContainer.innerHTML = "<p>No results found.</p>";
        } else {
          const list = document.createElement("ul");
          for (const binding of bindings) {
            const birdName = binding.label.value
              .split("/")
              .pop()
              .replace(/_/g, " ");
            const description = binding.description.value;
            const url = binding.bird.value;

            // Show the items in a list
            const listItem = document.createElement("li");
            listItem.innerHTML = `<h3>${birdName} <a href="${url}">${url}</a></h3><p>Description: ${description}</p>`;
            list.appendChild(listItem);
          }
          resultsContainer.appendChild(list);
        }
      }
    </script>

    <script>
      const updateBtn = document.getElementById("update-btn");
      const modal = document.getElementById("modal");
      const saveBtn = document.getElementById("save-btn");
      const cancelBtn = document.getElementById("cancel-btn");

      // update input
      const birdNameInput = document.getElementById("modal-bird-name");
      const descriptionInput = document.getElementById("modal-description");
      const urlInput = document.getElementById("modal-url");
      // saved data
      const birdName = document.getElementById("birdName");
      const description = document.getElementById("description");
      const url = document.getElementById("url");

      // Add event listener to Update button
      updateBtn.addEventListener("click", () => {
        // Check if the current user is the author
        const username = sessionStorage.getItem("username");
        const author = "<%= sighting.author %>";
        if (username === author) {
          // Populate modal inputs with current identification data
          birdNameInput.value = birdName.textContent;
          descriptionInput.value = description.textContent;
          urlInput.value = url.textContent;

          // Show modal dialog box
          modal.style.display = "block";
        } else {
          alert("Sorry, you don't have permission to edit the page.");
        }
      });

      // Add event listener to Save button
      saveBtn.addEventListener("click", async () => {
        const sightingId = "<%= sighting._id %>";
        const data = {
          birdName: birdNameInput.value,
          description: descriptionInput.value,
          url: urlInput.value,
        };
        const response = await fetch(`/details?id=${sightingId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          // window.location.reload();
          birdName.textContent = data.birdName;
          description.textContent = data.description;
          url.textContent = data.url;
          // Hide modal dialog box
          modal.style.display = "none";
        } else {
          console.error("Failed to update identification data");
        }
      });

      // Add event listener to Cancel button
      cancelBtn.addEventListener("click", () => {
        // Hide modal dialog box
        modal.style.display = "none";
      });

      // // Add event listener to Save button
      // saveBtn.addEventListener("click", () => {
      //   const sightingId = "<%= sighting._id %>";
      //   const data = {
      //     birdName: birdNameInput.value,
      //     description: descriptionInput.value,
      //     url: urlInput.value,
      //   };

      //   // Send AJAX request to server to update identification data
      //   fetch(`/details?id=${sightingId}`, {
      //     method: "PUT",
      //     headers: {
      //       "Content-Type": "application/json",
      //     },
      //     body: JSON.stringify(data),
      //   })
      //     .then((res) => res.json())
      //     .then((data) => {
      //       // Update identification data on page with new values
      //       birdName.textContent = data.birdName;
      //       description.textContent = data.description;
      //       url.textContent = data.url;

      //       // Hide modal dialog box
      //       modal.style.display = "none";
      //       window.location.reload();
      //     })
      //     .catch((err) => {
      //       console.error(err);
      //     });
      // });
    </script>
  </body>
</html>
